seqnames <- c("Q10572","E3M2K8","Q8WS01","E1FUV2","A8NSK3","Q9VT99")#
    seqnames <- c("Q10572","E3M2K8","Q8WS01","Q9VT99")#
    seqs <- lapply(seqnames,  retrieve_seqs_uniprot)    #
#
	# write out the sequences to a FASTA file:
# write out the sequences to a FASTA file:#
	write.fasta(seqs, seqnames, file="fox1.fasta")
library(Biostrings)#
    mySequences <- readAAStringSet(file = "fox1.fasta")#
    library(msa)#
    myAlignment <- msa(inputSeqs = mySequences, method = "ClustalW")
library(Biostrings)#
    mySequences <- readAAStringSet(file = "fox1.fasta")#
    library(msa)#
    myAlignment <- msa(mySequences)
library(Biostrings)#
    mySequences <- readAAStringSet(file = "fox1.fasta")#
    library(msa)#
    myAlignment <- msa(mySequences)#
#
myAlignment2 <- msaConvert(myAlignment, type="seqinr::alignment")
myAlignment2
myAlignment
myAlignmentmyAlignment
myAlignment2
library(Biostrings)#
    mySequences <- readAAStringSet(file = "fox1.fasta")#
    library(msa)#
    myAlignment <- msa(mySequences)#
#
    # write an XStringSet object to a file#
    writeXStringSet(unmasked(myAlignment), file = "myAlignment.fasta")
library(seqinr)#
    fox1aln <- read.alignment(file = "myAlignment.fasta", format = "fasta")#
	fox1aln$seq
print(myAlignment, show="complete")
?dist.alignment
?read.alignment
fox1aln
fox1aln$seq
fox1aln
library(seqinr)#
    fox1aln <- read.alignment(file = "myAlignment.fasta", format = "fasta")#
    mydist <- dist.alignment(fox1aln)#
    mytree <- nj(mydist)
?msaConvert
library(msa)#
    myAlignment <- msa(mySequences)#
    # convert msa for the seqinr package#
    fox1aln <- msaConvert(myAlignment, type="seqinr::alignment")#
    mydist <- dist.alignment(fox1aln)#
#
    library(ape)#
    mytree <- nj(mydist)
mytree
?root
library(ape)#
    mytree <- nj(mydist)#
	plot.phylo(root(mytree, outgroup = "Q9VT99", resolve.root = TRUE))
library(ape)#
    mytree <- nj(mydist)#
	plot.phylo(root(mytree, outgroup = "Q8WS01", resolve.root = TRUE))
library(ape)#
    mytree <- nj(mydist)#
    plot.phylo(root(mytree, outgroup = "Q8WS01"))
?root
root(mytree, outgroup = "Q8WS01")
root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)
?root
library(ape)#
    mytree <- nj(mydist)#
    plot.phylo(root(mytree, outgroup = "Q8WS01", resolve.root = TRUE))
library(ape)#
    mytree <- nj(mydist)#
    par(mfrow = c(2,2))#
    plot.phylo(root(mytree, outgroup = "Q8WS01", resolve.root = FALSE))#
    plot.phylo(root(mytree, outgroup = "Q8WS01", resolve.root = TRUE))
plot.phylo(root(mytree, outgroup = "Q8WS01", resolve.root = TRUE))
library(ape)#
    mytree <- nj(mydist)#
    par(mfrow = c(2,2))#
    plot.phylo(root(mytree, outgroup = "Q8WS01", resolve.root = TRUE), main = "Phylogenetic Tree")
write.tree(mytree, file="myTree.newick")
?write.tree
write.tree(mytree, file="myNewick.tree")
write.tree(mytree, file="myNewick.tre")
write.tree(mytree, file="myNewick.tree")
?root
library(ape)#
    mytree <- nj(mydist)#
    #mytree <- root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)#
    plot.phylo(mytree, main = "Phylogenetic Tree")
mytree <- root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)#
    plot.phylo(mytree, main = "Phylogenetic Tree")
library(ape)#
    mytree <- nj(mydist)#
    #mytree <- root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)#
    plot.phylo(mytree, main = "Phylogenetic Tree")
mytree <- root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)#
    plot.phylo(mytree, main = "Phylogenetic Tree")
nchar('MSNLPKPAKPEPKPLRVTKSNTLITASYRLTLNEQRLILAAISKLDPRRPMPKKVSVSAVDYSDIYGVQLRHAYEQMKVAADELYERDIKTFDGSGMERKRWVDRAKYLDGEGRVELSFTIHVMPYLTMLYSKVTSYDLRRVACLDSSHSFRLFEMLMQFRKTGWAYIEVESLRVALGLSDAYQRFNNLRQRVIDPAVAELKTKSNLDVSYELRREGRKVIAIKFTFCDLAQLPLNLELDPEDLPPLPEYDPAEESEWLITKPLGELAEAQEAGLLFAVSAEEGEQPD')
160/320
(3+3+3)/3
/Users/haruo/projects/shintani.masaki/2017-06-02/2017-06-02_uniref90tree/all_uniref90_blastp
library(Biostrings)#
mySequences <- readAAStringSet(file = "fox1.fasta")#
#
library(msa)#
myAlignment <- msa(mySequences)#
# convert msa for the seqinr package#
fox1aln <- msaConvert(myAlignment, type="seqinr::alignment")
fox1aln
library("seqinr")#
#
# create a function to retrieve several sequences from UniProt#
retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
#
seqnames <- c("P06747", "P0C569", "O56773", "Q5VKP1") # Make a vector containing the names of the sequences#
seqs <- lapply(seqnames,  retrieve_seqs_uniprot)      # Retrieve the sequences and store them in list variable "seqs"#
length(seqs)      # Print out the number of sequences retrieved#
seq1 <- seqs[[1]] # Get the 1st sequence#
seq1[1:20]        # Print out the first 20 letters of the 1st sequence#
seq2 <- seqs[[2]] # Get the 2nd sequence#
seq2[1:20]        # Print out the first 20 letters of the 2nd sequence#
#
# write the sequences to a FASTA-format file#
write.fasta(seqs, seqnames, file="phosphoproteins.fasta")
library(ape)#
    virusaln <- clustal(seqs)
virusaln
image(virusaln)
plot(nj(virusaln))
library(ape)#
    virusaln <- clustal(seqs)#
    image(virusaln)#
#
virusdist <- dist.alignment(virusaln)                            # Calculate the genetic distances#
#
virusdist                                                        # Print out the genetic distance matrix
class(virusaln)
library(ape)#
    virusaln <- clustal(seqs)#
    virusaln <- as.alignment(virusaln)#
    image(virusaln)
library(ape)#
    virusaln <- clustal(seqs)#
    image(virusaln)#
    virusaln <- as.alignment(virusaln)#
#
virusdist <- dist.alignment(virusaln)
library("seqinr")#
#
# create a function to retrieve several sequences from UniProt#
retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
#
seqnames <- c("P06747", "P0C569", "O56773", "Q5VKP1") # Make a vector containing the names of the sequences#
seqs <- lapply(seqnames,  retrieve_seqs_uniprot)      # Retrieve the sequences and store them in list variable "seqs"#
length(seqs)      # Print out the number of sequences retrieved#
seq1 <- seqs[[1]] # Get the 1st sequence#
seq1[1:20]        # Print out the first 20 letters of the 1st sequence#
seq2 <- seqs[[2]] # Get the 2nd sequence#
seq2[1:20]        # Print out the first 20 letters of the 2nd sequence#
#
# write the sequences to a FASTA-format file#
write.fasta(seqs, seqnames, file="phosphoproteins.fasta")
library(ape)#
    virusaln <- clustal(seqs)#
    image(virusaln)#
    virusaln <- as.alignment(virusaln)#
#
virusdist <- dist.alignment(virusaln)
?clustal
library(ape)
?clustal
clustal(seqs)
library("seqinr")#
#
# create a function to retrieve several sequences from UniProt#
retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
#
seqnames <- c("P06747", "P0C569", "O56773", "Q5VKP1") # Make a vector containing the names of the sequences#
seqs <- lapply(seqnames,  retrieve_seqs_uniprot)      # Retrieve the sequences and store them in list variable "seqs"#
length(seqs)      # Print out the number of sequences retrieved#
seq1 <- seqs[[1]] # Get the 1st sequence#
seq1[1:20]        # Print out the first 20 letters of the 1st sequence#
seq2 <- seqs[[2]] # Get the 2nd sequence#
seq2[1:20]        # Print out the first 20 letters of the 2nd sequence#
#
# write the sequences to a FASTA-format file#
write.fasta(seqs, seqnames, file="phosphoproteins.fasta")
clustal(seqs)
seqs
clustal(seqs)
?clustal
class(seqs)
lapply(seqs, class)
clustal(seqs)
dist.alignment(as.alignment(virusaln))
library(ape)#
    virusaln <- clustal(seqs)#
    virusaln <- as.alignment(virusaln)#
    image(virusaln)
library(ape)#
    virusaln <- clustal(seqs)#
    image(virusaln)#
    virusaln <- as.alignment(virusaln)
virusaln
library(ape)#
    virusaln <- clustal(seqs)#
    image(virusaln)#
    virusaln <- as.alignment(virusaln)
virusaln
dist.alignment(virusaln)
seqs
library(ape)#
    virusaln <- clustal(seqs)#
    image(virusaln)
virsaln
?clustal
library(ape)#
    virusaln <- ape::clustal(seqs)#
    image(virusaln)
library(ape)#
    virusaln <- ape::clustal(seqs)
virusaln
ape::clustal
library(ape)#
    virusaln <- ape::clustal(seqs)#
    image(virusaln)
virusaln <- as.alignment(virusaln)
virusaln
library("seqinr")#
    # create a function to retrieve several sequences from UniProt#
    retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
#
    seqnames <- c("P06747", "P0C569", "O56773", "Q5VKP1") # Make a vector containing the names of the sequences#
    seqs <- lapply(seqnames,  retrieve_seqs_uniprot)      # Retrieve the sequences and store them in list variable "seqs"#
    length(seqs)      # Print out the number of sequences retrieved#
#
    library(ape)#
    # Creating a multiple alignment of protein using CLUSTAL#
    virusaln <- ape::clustal(seqs)#
    virusaln
virusdist <- dist.alignment(fox1aln)#
mytree <- nj(virusdist)
virusdist <- dist.alignment(virusaln)#
mytree <- nj(virusdist)
virusaln <- as.alignment(virusaln)#
virusdist <- dist.alignment(virusaln)
library("seqinr")#
    # create a function to retrieve several sequences from UniProt#
    retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
#
    seqnames <- c("P06747", "P0C569", "O56773", "Q5VKP1") # Make a vector containing the names of the sequences#
    seqs <- lapply(seqnames,  retrieve_seqs_uniprot)      # Retrieve the sequences and store them in list variable "seqs"#
    length(seqs)      # Print out the number of sequences retrieved#
#
    library(ape)#
    # Creating a multiple alignment of protein using CLUSTAL#
    virusaln <- ape::clustal(seqs)#
    virusaln
as.alignment(virusaln)
virusaln <- as.alignment(virusaln)#
virusdist <- dist.alignment(virusaln)
library("seqinr")#
    # create a function to retrieve several sequences from UniProt#
    retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
#
    seqnames <- c("P06747", "P0C569", "O56773", "Q5VKP1") # Make a vector containing the names of the sequences#
    seqs <- lapply(seqnames,  retrieve_seqs_uniprot)      # Retrieve the sequences and store them in list variable "seqs"#
    length(seqs)      # Print out the number of sequences retrieved#
#
    library(ape)#
    # Creating a multiple alignment of protein using CLUSTAL#
    virusaln <- ape::clustal(seqs)#
    virusaln
virusdist <- dist.alignment(virusaln)
virusaln <- as.alignment(virusaln)#
virusdist <- dist.alignment(virusaln)
library("seqinr")#
    # create a function to retrieve several sequences from UniProt#
    retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
#
    seqnames <- c("P06747", "P0C569", "O56773", "Q5VKP1") # Make a vector containing the names of the sequences#
    seqs <- lapply(seqnames,  retrieve_seqs_uniprot)      # Retrieve the sequences and store them in list variable "seqs"#
    length(seqs)      # Print out the number of sequences retrieved#
#
    library(ape)#
    # Creating a multiple alignment of protein using CLUSTAL#
    virusaln <- ape::clustal(seqs)#
    virusaln
class(seqs)
seqs
packageVersion("msa")
library(seqinr)#
    library(ape)#
    library(Biostrings)#
    library(msa)
sessionInfo()
library(help=msa)
?msaPrettyPrint
library(msa)
?msaPrettyPrint
example(msaPrettyPrint)
library(help=ape)
help(plot.phylo)
example(plot.phylo)
?sessionInfo()
？library
?library
?sessionInfo
?install.packages
library(Biostrings)#
    mySequences <- readAAStringSet(file = "phosphoproteins.fasta")#
#
    #source("http://www.bioconductor.org/biocLite.R"); biocLite("msa")#
    library(msa)#
    myAlignment <- msa(mySequences)#
#
    # write an XStringSet object to a file#
    writeXStringSet(unmasked(myAlignment), file = "myAlignment.fasta")
?writeXStringSet
library("seqinr")#
    retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
#
	# retrieve the sequences from UniProt:#
	seqnames <- c("Q10572","E3M2K8","Q8WS01","E1FUV2","A8NSK3","Q9VT99")#
    seqnames <- c("Q10572","E3M2K8","Q8WS01","Q9VT99")#
    seqs <- lapply(seqnames,  retrieve_seqs_uniprot)    #
	# write out the sequences to a FASTA file:#
	write.fasta(seqs, seqnames, file="fox1.fasta")#
#
    library(Biostrings)#
    mySequences <- readAAStringSet(file = "fox1.fasta")#
#
    library(msa)#
    myAlignment <- msa(mySequences)#
    # convert msa for the seqinr package#
    fox1aln <- msaConvert(myAlignment, type="seqinr::alignment")
mydist <- dist.alignment(fox1aln)#
#
    library(ape)#
    mytree <- nj(mydist)#
    mytree <- root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)#
    plot.phylo(mytree, main = "Phylogenetic Tree")
mySequences
seqs
unlist(getAnnot(seqs))
?getAnnot
unlist(getAnnot(seqs))#
    # write out the sequences to a FASTA file:#
    write.fasta(seqs, getAnnot(seqs), file="fox1.fasta")#
#
    library(Biostrings)#
    mySequences <- readAAStringSet(file = "fox1.fasta")#
#
    library(msa)#
    myAlignment <- msa(mySequences)#
    # convert msa for the seqinr package#
    fox1aln <- msaConvert(myAlignment, type="seqinr::alignment")#
#
![](http://a-little-book-of-r-for-bioinformatics.readthedocs.io/en/latest/_images/P5_image10.png)#
#
    mydist <- dist.alignment(fox1aln)#
#
    library(ape)#
    mytree <- nj(mydist)#
    mytree <- root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)#
    plot.phylo(mytree, main = "Phylogenetic Tree")
mydist <- dist.alignment(fox1aln)#
#
    library(ape)#
    mytree <- nj(mydist)#
    mytree <- root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)#
    plot.phylo(mytree, main = "Phylogenetic Tree")
# retrieve the sequences from UniProt:#
	seqnames <- c("Q10572","E3M2K8","Q8WS01","E1FUV2","A8NSK3","Q9VT99")#
    seqnames <- c("Q10572","E3M2K8","Q8WS01","Q9VT99")#
    seqs <- lapply(seqnames,  retrieve_seqs_uniprot)   #
    # get sequence annotations#
    unlist(getAnnot(seqs))#
    # write out the sequences to a FASTA file:#
    write.fasta(seqs, getAnnot(seqs), file="fox1.fasta")#
#
    library(Biostrings)#
    mySequences <- readAAStringSet(file = "fox1.fasta")#
#
    library(msa)#
    myAlignment <- msa(mySequences)#
    # convert msa for the seqinr package#
    fox1aln <- msaConvert(myAlignment, type="seqinr::alignment")
mydist <- dist.alignment(fox1aln)#
#
    library(ape)#
    mytree <- nj(mydist)#
    mytree <- root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)#
    plot.phylo(mytree, main = "Phylogenetic Tree")
write.fasta(seqs, seqnames, file="fox1.fasta")#
#
    library(Biostrings)#
    mySequences <- readAAStringSet(file = "fox1.fasta")#
#
    library(msa)#
    myAlignment <- msa(mySequences)#
    # convert msa for the seqinr package#
    fox1aln <- msaConvert(myAlignment, type="seqinr::alignment")
mydist <- dist.alignment(fox1aln)#
#
    library(ape)#
    mytree <- nj(mydist)#
    mytree <- root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)#
    plot.phylo(mytree, main = "Phylogenetic Tree")
mytree$tips
mytree$tip
mytree <- root(mytree, outgroup = "Q9VT99", resolve.root = TRUE)#
    plot.phylo(mytree, main = "Phylogenetic Tree")
library(Biostrings)#
    mySequences <- readAAStringSet(file = "phosphoproteins.fasta")#
#
    #source("http://www.bioconductor.org/biocLite.R"); biocLite("msa")#
    library(msa)#
    myAlignment <- msa(mySequences)#
#
    # write an XStringSet object to a file#
    writeXStringSet(unmasked(myAlignment), file = "myAlignment.fasta")
library(seqinr)#
    virusaln <- read.alignment(file = "myAlignment.fasta", format = "fasta")#
	virusaln$seq
virusdist <- dist.alignment(virusaln) # Calculate the genetic distances#
	virusdist                             # Print out the genetic distance matrix
#install.packages("ape")#
    library(ape)#
    mytree <- nj(virusdist)#
	plot.phylo(mytree,type="u")   # plot
# get sequence annotations#
    unlist(getAnnot(seqs))
seqnames <- c("P06747", "P0C569", "O56773", "Q5VKP1") # Make a vector containing the names of the sequences#
    seqs <- lapply(seqnames,  retrieve_seqs_uniprot)      # Retrieve the sequences and store them in list variable "seqs"#
	length(seqs)      # Print out the number of sequences retrieved#
	seq1 <- seqs[[1]] # Get the 1st sequence#
	seq1[1:20]        # Print out the first 20 letters of the 1st sequence#
	seq2 <- seqs[[2]] # Get the 2nd sequence#
	seq2[1:20]        # Print out the first 20 letters of the 2nd sequence#
#
	# write the sequences to a FASTA-format file#
	write.fasta(seqs, seqnames, file="phosphoproteins.fasta")
# get sequence annotations#
    unlist(getAnnot(seqs))
library(msa)#
#
	# multiple alignment of Hemoglobin alpha example sequences#
	hemoSeq <- readAAStringSet(system.file("examples/HemoglobinAA.fasta", package="msa"))#
	hemoAln <- msa(hemoSeq)#
	hemoAln#
#
    # write Multiple Sequence Alignments to a file#
    writeXStringSet(unmasked(hemoAln), file="hemoAln.fasta")#
#
    #install.packages("phangorn")#
    library(phangorn) # read.aa # dist.ml#
    # Read Amino Acid Sequences in a File#
    aln <- read.aa(file = "hemoAln.fasta", format = "fasta")#
    # Pairwise Distances from Sequences#
    d <- dist.ml(aln, model="WAG")#
#
    # 非加重結合法 UPGMA (Unweighted Pair Group Method with Arithmetic mean)#
    plot(as.phylo(hclust(d, "average")))
?msa
# compute a distance matrix using the dist.alignment() function from the seqinr package:#
	virusdist <- dist.alignment(virusaln) # Calculate the genetic distances#
	virusdist                             # Print out the genetic distance matrix
?cor.test
?readAAStringSet
# retrieve several sequences from UniProt#
    library("seqinr")#
    retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
	seqnames <- c("Q10572","E3M2K8","Q8WS01","E1FUV2","A8NSK3","Q9VT99")#
    seqnames <- c("Q10572","E3M2K8","Q8WS01","Q9VT99")#
    seqs <- lapply(seqnames,  retrieve_seqs_uniprot)#
#
    # write out the sequences to a FASTA file#
    write.fasta(seqs, seqnames, file="fox1.fasta")#
#
    library(Biostrings)#
    mySequences <- readAAStringSet(file = "fox1.fasta")
class(seqs)
class(mySequences)
seqs
?msaConvert
library(help="msa")
globalAlignLepraeUlcerans <- pairwiseAlignment(lepraeseqstring, ulceransseqstring,#
	substitutionMatrix = BLOSUM50, gapOpening = -2, gapExtension = -8, scoreOnly = FALSE)#
#
globalAlignLepraeUlcerans # Print out the optimal global alignment and its score
data(BLOSUM50)#
BLOSUM50
library(Biostrings)#
data(BLOSUM50)
library("seqinr")#
    lepraeseq <- read.fasta(file = "http://www.uniprot.org/uniprot/Q9CD83.fasta")[[1]]#
    ulceransseq <- read.fasta(file = "http://www.uniprot.org/uniprot/A0PQ23.fasta")[[1]]#
#
    # 文字ベクトルを文字列に変換#
    # convert vectors of characters into strings#
	lepraeseqstring <- c2s(lepraeseq)     # Make a string that contains the sequence in "lepraeseq"#
	ulceransseqstring <- c2s(ulceransseq) # Make a string that contains the sequence in "ulceransseq"#
#
    # 大文字に変換#
    # convert strings to uppercase #
	lepraeseqstring <- toupper(lepraeseqstring)#
	ulceransseqstring <- toupper(ulceransseqstring)#
	lepraeseqstring # Print out the content of "lepraeseqstring"#
#
    # pairwiseAlignment#
	globalAlignLepraeUlcerans <- pairwiseAlignment(lepraeseqstring, ulceransseqstring,#
		substitutionMatrix = BLOSUM50, gapOpening = -2, gapExtension = -8, scoreOnly = FALSE)#
#
	globalAlignLepraeUlcerans # Print out the optimal global alignment and its score
localAlignLepraeUlcerans <- pairwiseAlignment(lepraeseqstring, ulceransseqstring,#
		substitutionMatrix = BLOSUM50, gapOpening = -2, gapExtension = -8, scoreOnly = FALSE, type="local")#
#
	localAlignLepraeUlcerans # Print out the optimal local alignment and its score#
#
    writePairwiseAlignments(localAlignLepraeUlcerans)
localAlignLepraeUlcerans # Print out the optimal local alignment and its score
# retrieve several sequences from UniProt#
library("seqinr")#
retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
seqnames <- c("Q10572","E3M2K8","Q8WS01","E1FUV2","A8NSK3","Q9VT99")#
seqnames <- c("Q10572","E3M2K8","Q8WS01","Q9VT99")#
seqs <- lapply(seqnames,  retrieve_seqs_uniprot)#
#
# write out the sequences to a FASTA file#
write.fasta(seqs, seqnames, file="fox1.fasta")#
#
# Read an XStringSet object from a file#
library(Biostrings)#
mySequences <- readAAStringSet(file = "fox1.fasta")#
#
# Multiple Sequence Alignment using ClustalW#
library(msa)#
myAlignment <- msa(mySequences)#
#
# convert msa for the seqinr package#
fox1aln <- msaConvert(myAlignment, type="seqinr::alignment")#
#
# calculating genetic distances between protein sequences#
mydist <- dist.alignment(fox1aln)#
#
# construct a phylogenetic tree with the neighbor joining algorithm#
library(ape)#
mytree <- nj(mydist)#
mytree <- root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)#
plot.phylo(mytree, main = "Phylogenetic Tree")
# get sequence annotations#
unlist(getAnnot(seqs))
library(msa)#
	example(msa)
ls("package:msa")
library(ape)#
	example(plot.phylo)
?sort
print(myAlignment, show="complete")
library(seqinr)#
    virusaln <- read.alignment(file = "myAlignment.fasta", format = "fasta")#
	virusaln$seq
print(myAlignment, show="complete")
# Multiple Sequence Alignment using ClustalW#
    #source("http://www.bioconductor.org/biocLite.R"); biocLite("msa")#
    library(msa)#
    myAlignment <- msa(mySequences, "ClustalW")
# Read an XStringSet object from a file#
    library(Biostrings)#
    mySequences <- readAAStringSet(file = "phosphoproteins.fasta")#
#
    # Multiple Sequence Alignment using ClustalW#
    #source("http://www.bioconductor.org/biocLite.R"); biocLite("msa")#
    library(msa)#
    myAlignment <- msa(mySequences, "ClustalW")
myAlignment
library(seqinr)#
    virusaln <- read.alignment(file = "myAlignment.fasta", format = "fasta")#
	virusaln$seq
print(myAlignment, show="complete")
virusdist <- dist.alignment(virusaln) # Calculate the genetic distances#
	virusdist                             # Print out the genetic distance matrix
# construct a phylogenetic tree with the neighbor joining algorithm#
    #install.packages("ape")#
    library(ape)#
    mytree <- nj(virusdist)#
	plot.phylo(mytree,type="u")   # plot the unrooted phylogenetic tree
665.50 - 544.50
library("seqinr")#
    # create a function to retrieve several sequences from UniProt#
    retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
#
    seqnames <- c("P06747", "P0C569", "O56773", "Q5VKP1") # Make a vector containing the names of the sequences#
    seqs <- lapply(seqnames,  retrieve_seqs_uniprot)      # Retrieve the sequences and store them in list variable "seqs"#
	length(seqs)      # Print out the number of sequences retrieved#
	seq1 <- seqs[[1]] # Get the 1st sequence#
	seq1[1:20]        # Print out the first 20 letters of the 1st sequence#
	seq2 <- seqs[[2]] # Get the 2nd sequence#
	seq2[1:20]        # Print out the first 20 letters of the 2nd sequence#
#
	# write the sequences to a FASTA-format file#
	write.fasta(seqs, seqnames, file="phosphoproteins.fasta")
# Read an XStringSet object from a file#
    library(Biostrings)#
    mySequences <- readAAStringSet(file = "phosphoproteins.fasta")#
#
    # Multiple Sequence Alignment using ClustalW#
    #source("http://www.bioconductor.org/biocLite.R"); biocLite("msa")#
    library(msa)#
    myAlignment <- msa(mySequences, "ClustalW")#
    myAlignment#
#
    # write an XStringSet object to a file#
    writeXStringSet(unmasked(myAlignment), file = "myAlignment.fasta")
library(seqinr)#
    virusaln <- read.alignment(file = "myAlignment.fasta", format = "fasta")#
	virusaln$seq
virusaln
virsaln
virusaln
names(virusaln)
length(virusaln)
library(seqinr)#
    virusaln <- read.alignment(file = "myAlignment.fasta", format = "fasta")#
    names(virusaln)#
	virusaln$seq
names(virusaln)
virusaln$nb
virusaln$nam
virusaln$com
virusaln$seq
?dist.dna()
?dist.dna
library(ape)
?dist.dna
read.alignment()
read.alignment
read.alignment()
library(seqinr)
dist.alignment()
dist.dna()
virusdist <- dist.alignment(virusaln) # Calculate the genetic distances#
virusdist                             # Print out the genetic distance matrix
# construct a phylogenetic tree with the neighbor joining algorithm#
    #install.packages("ape")#
    library(ape)#
    mytree <- nj(virusdist)#
	plot.phylo(mytree,type="u")   # plot the unrooted phylogenetic tree
?nj
nj
nj()
?nj
?dist.dna
example(dist.dna)
example(nj)
example(dist.alignment)
?dist.alignment
?read.alignment
# retrieve several sequences from UniProt#
library("seqinr")#
retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
seqnames <- c("Q10572","E3M2K8","Q8WS01","E1FUV2","A8NSK3","Q9VT99")#
seqnames <- c("Q10572","E3M2K8","Q8WS01","Q9VT99")#
seqs <- lapply(seqnames,  retrieve_seqs_uniprot)#
#
# write out the sequences to a FASTA file#
write.fasta(seqs, seqnames, file="fox1.fasta")#
#
# Read an XStringSet object from a file#
library(Biostrings)#
mySequences <- readAAStringSet(file = "fox1.fasta")#
#
# Multiple Sequence Alignment using ClustalW#
library(msa)#
myAlignment <- msa(mySequences)
myAlignment
library("seqinr")#
    # create a function to retrieve several sequences from UniProt#
    retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
#
    seqnames <- c("P06747", "P0C569", "O56773", "Q5VKP1") # Make a vector containing the names of the sequences#
    seqs <- lapply(seqnames,  retrieve_seqs_uniprot)      # Retrieve the sequences and store them in list variable "seqs"#
	length(seqs)      # Print out the number of sequences retrieved#
	seq1 <- seqs[[1]] # Get the 1st sequence#
	seq1[1:20]        # Print out the first 20 letters of the 1st sequence#
	seq2 <- seqs[[2]] # Get the 2nd sequence#
	seq2[1:20]        # Print out the first 20 letters of the 2nd sequence#
#
	# write the sequences to a FASTA-format file#
	write.fasta(seqs, seqnames, file="phosphoproteins.fasta")
# Read an XStringSet object from a file#
    library(Biostrings)#
    mySequences <- readAAStringSet(file = "phosphoproteins.fasta")#
#
    # Multiple Sequence Alignment using ClustalW#
    #source("http://www.bioconductor.org/biocLite.R"); biocLite("msa")#
    library(msa)#
    myAlignment <- msa(mySequences, "ClustalW")#
    myAlignment
# write an XStringSet object to a file#
    writeXStringSet(unmasked(myAlignment), file = "virusaln.fasta")
system("open .")
write.tree(mytree, file="myNewick.tree")
library(ape)
write.tree(mytree, file="myNewick.tree")
# retrieve several sequences from UniProt#
    library("seqinr")#
    retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
	#seqnames <- c("Q10572","E3M2K8","Q8WS01","E1FUV2","A8NSK3","Q9VT99")#
    seqnames <- c("Q10572","E3M2K8","Q8WS01","Q9VT99")#
    seqs <- lapply(seqnames,  retrieve_seqs_uniprot)#
#
    # write out the sequences to a FASTA file#
    write.fasta(seqs, seqnames, file="fox1.fasta")#
#
    # Read an XStringSet object from a file#
    library(Biostrings)#
    mySequences <- readAAStringSet(file = "fox1.fasta")#
#
    # Multiple Sequence Alignment using ClustalW#
    library(msa)#
    myAlignment <- msa(mySequences)#
#
    # convert msa for the seqinr package#
    fox1aln <- msaConvert(myAlignment, type="seqinr::alignment")#
#
    # calculating genetic distances between protein sequences#
    mydist <- dist.alignment(fox1aln)#
#
    # construct a phylogenetic tree with the neighbor joining algorithm#
    library(ape)#
    mytree <- nj(mydist)#
    mytree <- root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)#
    plot.phylo(mytree, main = "Phylogenetic Tree")#
#
    # get sequence annotations#
    unlist(getAnnot(seqs))
write.tree(mytree, file="myNewick.tree")
write.tree
?write.tree
example(write.tree)
library(msa)#
    example(msa)
library(msa)
library(help=msa)
library(msa)
library(help=msa)
example(msa)
library(msa)#
    example(msa)
# retrieve several sequences from UniProt#
library("seqinr")#
retrieve_seqs_uniprot <- function(ACCESSION) read.fasta(file = paste0("http://www.uniprot.org/uniprot/",ACCESSION,".fasta"), seqtype = c("AA"), strip.desc = TRUE)[[1]]#
#seqnames <- c("Q10572","E3M2K8","Q8WS01","E1FUV2","A8NSK3","Q9VT99")#
seqnames <- c("Q10572","E3M2K8","Q8WS01","Q9VT99")#
seqs <- lapply(seqnames,  retrieve_seqs_uniprot)#
#
# write out the sequences to a FASTA file#
write.fasta(seqs, seqnames, file="fox1.fasta")#
#
# Read an XStringSet object from a file#
library(Biostrings)#
mySequences <- readAAStringSet(file = "fox1.fasta")#
#
# Multiple Sequence Alignment using ClustalW#
library(msa)#
myAlignment <- msa(mySequences)#
#
# convert msa for the seqinr package#
fox1aln <- msaConvert(myAlignment, type="seqinr::alignment")#
#
# calculating genetic distances between protein sequences#
mydist <- dist.alignment(fox1aln)#
#
# construct a phylogenetic tree with the neighbor joining algorithm#
library(ape)#
mytree <- nj(mydist)#
mytree <- root(mytree, outgroup = "Q8WS01", resolve.root = TRUE)#
plot.phylo(mytree, main = "Phylogenetic Tree")
mytree
names(mytree)
mytree$tip.lable
mytree$tip.label
?root
setwd("~/projects/r4bioinfo/R_tree/examples")#
Accession_List <- "Accession_List.txt"
dir()
# Loading Data into R#
ACCESSIONs <- read.table(Accession_List, stringsAsFactors=FALSE)[,1]#
#
# Load SeqinR package#
#install.packages("seqinr")#
library(seqinr)
ACCESSIONs
# Retrieving sequence data using SeqinR#
eutils.ncbi.fasta <- function(ACCESSION) read.fasta(file = paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",ACCESSION,"&rettype=fasta&retmode=text"), strip.desc = TRUE)[[1]]#
ld <- lapply(ACCESSIONs, eutils.ncbi.fasta)
ls
ld
paste(sprintf("%02d", 1:length(ld)), sub("([^ ]+) ([^ ]+) (.+)", "\\2_\\1", getAnnot(ld)), sep="_")
unlist(getAnnot(ld))
paste(sprintf("%02d", 1:length(ld)), sub("([^ ]+) ([^ ]+) ([^ ]+) (.+)", "\\2_\\3_\\1", getAnnot(ld)), sep="_")
